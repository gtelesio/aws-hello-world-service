# =============================================================================
# AWS Hello World Service - Environment Variables
# =============================================================================

# =============================================================================
# Server Configuration
# =============================================================================
# Port where the server will listen
PORT=3000

# Host address where the server will bind
HOST=0.0.0.0

# Log level for the application (error, warn, info, debug)
LOG_LEVEL=info

# =============================================================================
# Environment
# =============================================================================
# Application environment (development, staging, production)
NODE_ENV=development

# Application name
APP_NAME=aws-hello-world-service

# Application version
APP_VERSION=1.0.0

# =============================================================================
# AWS Configuration
# =============================================================================
# AWS Region
AWS_REGION=us-east-1

# AWS Access Key ID (for local development only)
AWS_ACCESS_KEY_ID=your-access-key-id

# AWS Secret Access Key (for local development only)
AWS_SECRET_ACCESS_KEY=your-secret-access-key

# AWS Session Token (for temporary credentials)
AWS_SESSION_TOKEN=

# =============================================================================
# ECS Configuration
# =============================================================================
# ECS Cluster name
ECS_CLUSTER_NAME=hello-world-cluster

# ECS Service name
ECS_SERVICE_NAME=hello-world-service

# ECS Task Definition family
ECS_TASK_DEFINITION_FAMILY=hello-world-task

# =============================================================================
# ECR Configuration
# =============================================================================
# ECR Repository URI
ECR_REPOSITORY_URI=your-account.dkr.ecr.us-east-1.amazonaws.com/hello-world-service

# ECR Repository name
ECR_REPOSITORY_NAME=hello-world-service

# =============================================================================
# Load Balancer Configuration
# =============================================================================
# ALB Target Group ARN
ALB_TARGET_GROUP_ARN=arn:aws:elasticloadbalancing:us-east-1:your-account:targetgroup/hello-world-tg/your-target-group-id

# ALB Listener ARN
ALB_LISTENER_ARN=arn:aws:elasticloadbalancing:us-east-1:your-account:listener/your-listener-id

# =============================================================================
# CloudWatch Configuration
# =============================================================================
# CloudWatch Log Group name
CLOUDWATCH_LOG_GROUP=/ecs/hello-world-service

# CloudWatch Log Stream prefix
CLOUDWATCH_LOG_STREAM_PREFIX=ecs

# =============================================================================
# Security Configuration
# =============================================================================
# JWT Secret for authentication (if implemented)
JWT_SECRET=your-super-secret-jwt-key-change-in-production

# CORS Origin (comma-separated for multiple origins)
CORS_ORIGIN=http://localhost:3000,https://yourdomain.com

# Rate limiting - maximum requests per time window
RATE_LIMIT_MAX=100

# Rate limiting - time window in seconds
RATE_LIMIT_TIME_WINDOW=900

# =============================================================================
# Database Configuration (if implemented)
# =============================================================================
# Database host
DB_HOST=localhost

# Database port
DB_PORT=5432

# Database name
DB_NAME=hello_world_db

# Database username
DB_USERNAME=postgres

# Database password
DB_PASSWORD=your-database-password

# Database connection string (alternative to individual parameters)
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# =============================================================================
# Monitoring and Health Checks
# =============================================================================
# Health check endpoint path
HEALTH_CHECK_PATH=/health

# Health check timeout in milliseconds
HEALTH_CHECK_TIMEOUT=5000

# Graceful shutdown timeout in milliseconds
GRACEFUL_SHUTDOWN_TIMEOUT=30000

# =============================================================================
# Feature Flags
# =============================================================================
# Enable API versioning
ENABLE_API_VERSIONING=true

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Enable CORS
ENABLE_CORS=true

# Enable rate limiting
ENABLE_RATE_LIMITING=true

# Enable helmet security headers
ENABLE_HELMET=true

# =============================================================================
# Development and Testing
# =============================================================================
# Enable debug mode
DEBUG=false

# Test database URL
TEST_DATABASE_URL=postgresql://username:password@localhost:5432/test_database

# Test environment flag
TEST_ENV=false

# =============================================================================
# Terraform Configuration
# =============================================================================
# Terraform state bucket
TF_STATE_BUCKET=your-terraform-state-bucket

# Terraform state key
TF_STATE_KEY=aws-hello-world-service/terraform.tfstate

# Terraform state region
TF_STATE_REGION=us-east-1

# =============================================================================
# Docker Configuration
# =============================================================================
# Docker image tag
DOCKER_IMAGE_TAG=latest

# Docker build context
DOCKER_BUILD_CONTEXT=.

# =============================================================================
# CI/CD Configuration
# =============================================================================
# GitHub repository
GITHUB_REPOSITORY=gtelesio/aws-hello-world-service

# GitHub token (for CI/CD operations)
GITHUB_TOKEN=your-github-token

# =============================================================================
# Notes
# =============================================================================
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env files to version control
# 3. Use different values for different environments
# 4. Consider using AWS Secrets Manager or Parameter Store for production
# 5. Update values according to your AWS account and requirements
